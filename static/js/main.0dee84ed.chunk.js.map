{"version":3,"sources":["assets/tacoLogo.PNG","logo.svg","dux/taco-dux.js","constants/colors.js","components/ecosystems/header.js","components/organisms/heading.js","components/organisms/recipe.js","components/ecosystems/section.js","components/ecosystems/body.js","components/ecosystems/error.js","components/ecosystems/retrieving.js","components/ecosystems/content.js","components/environments/taco.js","App.js","serviceWorker.js","models/section-model.js","models/taco-model.js","constants/urls.js","sagas/taco-saga.js","index.js"],"names":["module","exports","__webpack_require__","p","autodux","slice","initial","retrieving","error","taco","actions","getTaco","state","Object","objectSpread","getTacoSuccess","payload","getTacoError","reducer","selectors","white","pair1","recipe","name","pair2","PaddedGrid","styled","Grid","_templateObject","Img","img","_templateObject2","Header","props","_props$onClick","onClick","react_default","a","createElement","Grid_default","container","item","xs","sm","md","direction","justify","alignItems","style","paddingTop","Button_default","color","backgroundColor","paddingLeft","paddingRight","borderRadius","src","logoImage","marginTop","Typography_default","variant","align","fontWeight","fontSize","Vertical","Typography","heading_templateObject","FullPaper","Paper","heading_templateObject2","Heading","_props$name","_props$backgroundColo","square","component","recipe_templateObject","Br","br","recipe_templateObject2","regexp","Recipe","_props$recipe","sentences","split","filter","sentence","test","includes","recipe_FullPaper","map","index","key","replace","RelGrid","section_templateObject","Section","_props$colors","colors","spacing","organisms_recipe","heading","overview","_ref","_ref$baseLayer","baseLayer","_ref$mixin","mixin","_ref$condiment","condiment","_ref$seasoning","seasoning","_ref$shell","shell","concat","Body","_this$props$taco","this","_taco$baseLayer","_taco$mixin","_taco$condiment","_taco$seasoning","_taco$shell","react","section","assign","PureComponent","Error","_this$props$data","data","height","Error_default","Retrieving","CircularProgress_default","Content","_this$props$status","status","ecosystems_retrieving","ecosystems_error","body","Taco","_getNewTaco","_this$props$getTaco","_this","header","content","connect","reduxState","dispatch","App","className","environments_taco","Boolean","window","location","hostname","match","slug","url","classCallCheck","base_layer","Card","getNewTaco","request","_callee","response","json","regenerator_default","wrap","_context3","prev","next","fetch","type","sent","abrupt","stop","_context","call","Model","put","t0","message","_marked","_context2","takeLatest","_marked2","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","applyMiddleware","run","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0dee84ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tacoLogo.9e76bb6f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import autodux from 'autodux';\r\n\r\nexport const slice = 'taco';\r\n\r\nconst initial = {\r\n    retrieving: false,\r\n    error: false,\r\n    taco: null\r\n};\r\n\r\nexport const { actions = {}, reducer, selectors } = autodux({\r\n    slice,\r\n    initial,\r\n    actions: {\r\n        getTaco: state => ({\r\n            ...state,\r\n            retrieving: true,\r\n            error: false\r\n        }),\r\n        getTacoSuccess: (state, payload) => ({\r\n            retrieving: false,\r\n            error: false,\r\n            taco: payload\r\n        }),\r\n        getTacoError: (state, payload) => ({\r\n            retrieving: false,\r\n            error: payload,\r\n            taco: null\r\n        })\r\n    }\r\n})\r\n","export const tomato = '#f15e3e';\r\nexport const orangered = '#da3613';\r\nexport const firebrick = '#aa2308';\r\nexport const white = '#fdfdfd';\r\nexport const black = '#0d0d0d';\r\nexport const red = '#ff0000';\r\n\r\nexport const pair1 = { recipe: tomato, name: orangered };\r\nexport const pair2 = { recipe: orangered, name: firebrick };\r\n ","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { white, tomato } from '../../constants/colors';\r\n\r\nimport logoImage from '../../assets/tacoLogo.PNG';\r\n\r\nconst PaddedGrid = styled(Grid)`\r\n    padding-left: 1.0em;\r\n    padding-bottom: 1.0em;\r\n    background-color: ${white};\r\n    height: 100%;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  max-height: 15em;\r\n  min-height: 15em;\r\n`;\r\n\r\nconst Header = props => {\r\n    const { onClick = () => {} } = props;\r\n\r\n    return (\r\n        <Grid container>\r\n            <PaddedGrid item xs={12} sm={8} md={4}>\r\n                <Grid item container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\r\n                    <Grid item style={{ paddingTop: '1em' }}>\r\n                        <Button onClick={onClick} style={{ color: white, backgroundColor: tomato, paddingLeft: '2.0em', paddingRight: '2.0em', borderRadius: '8px' }}>New Taco</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Img src={logoImage} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" style={{ marginTop: '-4em' }}>\r\n                    <Grid item>\r\n                        <Typography variant=\"title\" align=\"left\" style={{ fontWeight: 700 , fontSize: '2.5em' }}>Today's Taco</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </PaddedGrid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { white } from '../../constants/colors';\r\n\r\nconst Vertical = styled(Typography)`\r\n    writing-mode: vertical-rl;\r\n    text-orientation: sideways;\r\n    color: white;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%\r\n    transform: translateX(-50%) translateY(-50%);\r\n`;\r\n\r\nconst FullPaper = styled(Paper)`\r\n    height: 100%;\r\n    padding-top: 0.75em;\r\n    position: relative;\r\n`;\r\n\r\nconst Heading = props => {\r\n    const { name = '', backgroundColor = '' } = props;\r\n\r\n    return (\r\n        <FullPaper style={{backgroundColor}} square>\r\n            <Vertical component=\"h2\" style={{ color: white, fontSize: `1.25em` }}>{name}</Vertical>\r\n        </FullPaper>\r\n    );\r\n}\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { white } from '../../constants/colors';\r\n\r\nconst FullPaper = styled(Paper)`\r\n    height: 100%;\r\n    padding-top: 0.75em;\r\n    padding-left: 1.0em;\r\n    padding-right: 1.0em;\r\n`;\r\n\r\nconst Br = styled.br`\r\n    padding-left: 0.5em;\r\n    padding-right: 0.5em;\r\n`;\r\n\r\nconst regexp = /^[\\w]*$/;\r\n\r\nconst Recipe = props => {\r\n    const { recipe = '', name ='', backgroundColor = '' } = props\r\n\r\n    const sentences = recipe.split(/\\r?\\n/)\r\n        .filter(sentence => sentence !== name)\r\n        .filter(sentence => !regexp.test(sentence))\r\n        .filter(sentence => !sentence.includes(\"=\"));\r\n\r\n    return (\r\n        <FullPaper style={{backgroundColor}} square>\r\n            {\r\n                sentences.map((sentence, index) => {\r\n                    switch (sentence[0]) {\r\n                    case \"#\":\r\n                        return <Br key={index} />\r\n                    \r\n                    default:\r\n                     return <Typography key={index} variant=\"body2\" align=\"left\" style={{ color: white }}>{sentence.replace(\"*\", \"\")}</Typography>\r\n                    }\r\n                })\r\n            }\r\n        </FullPaper>\r\n    )\r\n}\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\n\r\nimport Heading from '../organisms/heading';\r\nimport Recipe from '../organisms/recipe';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst RelGrid = styled(Grid)`\r\n    position: relative;\r\n`;\r\n\r\nconst Section = props => {\r\n    const { name = '', recipe = '', colors = {} } = props\r\n\r\n    return (\r\n        <Grid container spacing={0}>\r\n            <Grid item xs={8} sm={6} md={3}>\r\n                <Recipe recipe={recipe} name={name} backgroundColor={colors.recipe} />\r\n            </Grid>\r\n            <RelGrid item xs sm={2} md={1}>\r\n                <Heading name={name} backgroundColor={colors.name} />\r\n            </RelGrid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Section;\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport Section from './section';\r\nimport { pair1, pair2 } from '../../constants/colors';\r\n\r\nconst overview = ({baseLayer = {}, mixin = {}, condiment = {}, seasoning = {}, shell = {}}) => `${baseLayer.name} with ${mixin.name}, garnished with ${condiment.name} topped off with ${seasoning.name} and wrapped in delicious ${shell.name}`;\r\n\r\nclass Body extends PureComponent {\r\n    render () {\r\n        const { taco = {} } = this.props;\r\n        const { baseLayer = {}, mixin = {}, condiment = {}, seasoning = {}, shell = {} } = taco;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Section recipe={overview(taco)} colors={pair1} />\r\n                <Section {...baseLayer} colors={pair2} />\r\n                <Section {...mixin} colors={pair1} />\r\n                <Section {...condiment} colors={pair2} />\r\n                <Section {...seasoning} colors={pair1} />\r\n                <Section {...shell} colors={pair2} />\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Body;\r\n","import React, { PureComponent } from 'react';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { red, white } from '../../constants/colors';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Error extends PureComponent {\r\n    render () {\r\n        const { data = 'There was an error. Try again.' } = this.props;\r\n\r\n        return (\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={8} md={4} style={{ backgroundColor: red, height: '6em' }}>\r\n                    <div style={{ marginTop: '1.5em' }}>\r\n                        <ErrorIcon />\r\n                        <Typography component=\"h2\" style={{ color: white, fontSize: `1.25em` }}>{data}</Typography>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error;\r\n","import React, { PureComponent } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { tomato } from '../../constants/colors';\r\n\r\nclass Retrieving extends PureComponent {\r\n    render () {\r\n        return (\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={8} md={4} style={{ backgroundColor: tomato, height: '5em' }}>\r\n                    <CircularProgress color='primary' style={{ marginTop: '1.5em' }} />\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Retrieving;\r\n","import React, { PureComponent } from 'react';\r\n\r\nimport Body from './body';\r\nimport Error from './error';\r\nimport Retrieving from './retrieving';\r\n\r\nclass Content extends PureComponent {\r\n    render () {\r\n        const { status = {} } = this.props;\r\n        const { retrieving, error, taco } = status\r\n\r\n        if (retrieving) {\r\n            return <Retrieving />\r\n        }\r\n\r\n        if (error) {\r\n            return <Error data={error} />\r\n        }\r\n\r\n        if (!taco) {\r\n            return <Error data={'No Taco Yet!'} />\r\n        }\r\n\r\n        return <Body taco={taco} />\r\n    }\r\n}\r\n\r\nexport default Content;\r\n","import React, { PureComponent, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { slice, actions } from '../../dux/taco-dux';\r\n\r\nimport Header from '../ecosystems/header';\r\nimport Content from '../ecosystems/content';\r\n\r\nconst mapStateToProps = reduxState => ({\r\n    status: reduxState[slice]\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n    getTaco: () => dispatch(actions.getTaco())\r\n})\r\n\r\nclass Taco extends PureComponent {\r\n    componentDidMount () {\r\n        this._getNewTaco()\r\n    }\r\n\r\n    _getNewTaco = () => {\r\n        const { getTaco = () => {} } = this.props\r\n\r\n        getTaco()\r\n    }\r\n\r\n    render () {\r\n        const { status = {} } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Header onClick={this._getNewTaco} />\r\n                <Content status={status} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(Taco);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Taco from '../src/components/environments/taco';\n\nimport 'typeface-roboto';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Taco />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","class Section {\r\n    constructor({ name, recipe, slug, url }) {\r\n        this.name = name;\r\n        this.recipe = recipe;\r\n        this.slug = slug;\r\n        this.url = url;\r\n    }\r\n}\r\n\r\nexport default Section;\r\n","import Card from './section-model'\r\n\r\nclass Taco {\r\n    constructor ({base_layer, condiment, mixin, seasoning, shell}) {\r\n        this.baseLayer = new Card(base_layer);\r\n        this.condiment = new Card(condiment);\r\n        this.mixin = new Card(mixin);\r\n        this.seasoning = new Card(seasoning);\r\n        this.shell = new Card(shell);\r\n    }\r\n}\r\n\r\nexport default Taco;\r\n","export const taco = 'https://taco-randomizer.herokuapp.com/random/'","import { takeLatest, put, call } from 'redux-saga/effects'\r\nimport { actions } from '../dux/taco-dux'\r\nimport Model from '../models/taco-model'\r\nimport { taco as url } from '../constants/urls'\r\n\r\nasync function request () {\r\n    const response = await fetch(url, { type: 'get' });\r\n    const json = await response.json();\r\n\r\n    return json;\r\n}\r\n\r\nexport function * getTaco () {\r\n    try {\r\n        const json = yield call(request);\r\n        const taco = new Model(json);\r\n\r\n        yield put({ type: actions.getTacoSuccess.type, payload: taco });\r\n\r\n    } catch (ex) {\r\n        yield put ({ type: actions.getTacoError.type, payload: ex.message || ex });\r\n    }\r\n}\r\n\r\nexport function * getNewTaco () {\r\n    yield takeLatest(actions.getTaco.type, getTaco);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createSagaMiddleware  from 'redux-saga';\nimport { getNewTaco } from '../src/sagas/taco-saga';\nimport { reducer } from '../src/dux/taco-dux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    combineReducers({\n        taco: reducer\n    }),\n    applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(getNewTaco);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}